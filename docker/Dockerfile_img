ARG LOG=INFO
ARG NETWORK="preprod"
# mainnet, preprod, testnet, devkit
ARG PROTOCOL_MAGIC=1
# mainnet 764824073, preprod 1, testnet 2, devkit 42

#common env
ARG DB_ADMIN_USER_NAME="rosetta_db_admin"
ARG DB_ADMIN_USER_SECRET="weakpwd#123_d"

# Postgres variables
ARG DB_IMAGE_NAME="postgres"
ARG DB_IMAGE_TAG="14.11-bullseye"
ARG DB_NAME="rosetta-java-preprod"
ARG DB_HOST="db"
# Service name in docker-compose or local db
ARG DB_PORT="5432"
ARG DB_SCHEMA=${NETWORK}
ARG DB_PATH="data"

# Cardano Node variables
ARG CARDANO_NODE_HOST="cardano-node"
# Service name in docker-compose or local cardano node
ARG CARDANO_NODE_PORT="3001"
# Uncomment if you are using local cardano node
ARG CARDANO_NODE_VERSION="8.9.0"
ARG CARDANO_NODE_SUBMIT_HOST="cardano-submit-api"
ARG NODE_SUBMIT_API_PORT=8090
ARG CARDANO_NODE_SOCKET="./node-ipc"
ARG CARDANO_NODE_DB="./node/db"
#ARG CARDANO_CONFIG="./docker/${NETWORK}"
ARG CARDANO_CONFIG="./docker/config/${NETWORK}"

#api env
ARG API_SPRING_PROFILES_ACTIVE_API="dev"
# staging. Additional profiles: mempool (if mempool should be activated)
ARG API_PORT=8081
ARG TRANSACTION_TTL=3000

ARG DB_CONNECTION_PARAMS_PROVIDER_TYPE="ENVIRONMENT"
ARG DB_DRIVER_CLASS_NAME="org.postgresql.Driver"

ARG ROSETTA_VERSION=1.4.13
ARG TOPOLOGY_FILEPATH=/config/${NETWORK}/topology.json
ARG GENESIS_SHELLEY_PATH=/config/${NETWORK}/shelley-genesis.json
ARG GENESIS_BYRON_PATH=/config/${NETWORK}/byron-genesis.json
ARG GENESIS_ALONZO_PATH=/config/${NETWORK}/alonzo-genesis.json
ARG GENESIS_CONWAY_PATH=/config/${NETWORK}/conway-genesis.json
ARG API_NODE_SOCKET_PATH=./node/node.socket
ARG PRINT_EXCEPTION=true

#api env
ARG YACI_SPRING_PROFILES="postgres"
# database profiles: h2, postgres
ARG INDEXER_NODE_PORT=3001
ARG MEMPOOL_ENABLED=true

# node
FROM ghcr.io/intersectmbo/cardano-node:${CARDANO_NODE_VERSION}
#FROM debian:stable-slim

COPY ${CARDANO_NODE_SOCKET} /node/ipc
COPY ${CARDANO_NODE_DB} /node/data/db
COPY ${CARDANO_CONFIG} /node/config

COPY ./docker/run_backend.sh /app/run_backend.sh

EXPOSE ${CARDANO_NODE_PORT}

#ENTRYPOINT ["/bin/sh", "/app/run_backend.sh"]

ENTRYPOINT cardano-node run --database-path /data/db --host-addr 0.0.0.0 --port 3001 --socket-path /node/ipc/node.socket --topology /node/config/topology.json --config /node/config/config.json

##CMD ["/bin/sh", "-c", "bash"]
