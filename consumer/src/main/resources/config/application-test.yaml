# Infrastructure domain
infrastructure:
  host: 172.16.1.230

spring:
  # Datasource specific configs
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${infrastructure.host}:54321/rosetta?currentSchema=test
    username: rosetta_db_admin
    password: Y2FyZGFuby1kYXRhYmFzZS1tYXN0ZXI=
    driver-class-name: org.postgresql.Driver
    # Hikari specific configs
    hikari:
      pool-name: rosetta-consumer-pool
      minimum-idle: 10 #minimum number of idle connections maintained by HikariCP in a connection pool
      maximum-pool-size: 20 #maximum pool size
      idle-timeout: 300000 #maximum idle time for connection
      max-lifetime: 900000 #maximum lifetime in milliseconds of a connection in the pool after it is closed.
      connection-timeout: 50000 #maximum number of milliseconds that a client will wait for a connection
      auto-commit: true #default auto-commit behavior.
      connection-init-sql: SELECT 1
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
  # JPA specific configs
  # JPA specific configs
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: dev
        show_sql: true
        format_sql: true

kafka:
  auto-create-topics: false
  admin:
    bootstrapServers: ${infrastructure.host}:9092
  topics:
    block:
      name: block
      partitions: 1
      replicationFactor: 1
  #      configs:
  #        key1: value1
  #        key2: value2
  producers:
    json-producer:
      clientId: json-producer
      retries: 3
      bootstrapServers: ${infrastructure.host}:9092
      maxInFlightRequestsPerConnection: 1
      requestTimeoutMs: 30000
      batchSize: 16384
      lingerMs: 5
      bufferMemory: 33554432
      acks: all
      enableIdempotence: true
      keySerializer: org.apache.kafka.common.serialization.StringSerializer
      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
  consumers:
    json-consumer:
      clientId: json-consumer
      bootstrapServers: ${infrastructure.host}:9092
      keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      autoOffsetReset: earliest
      enableAutoCommit: false
      autoCommitIntervalMs: 1000
      sessionTimeoutMs: 30000
      trustedPackages: "*"
      allowAutoCreateTopics: false
      concurrency: 10
      pollTimeout: 3000
  listeners:
    block:
      groupId: consumer-rosetta-group
      topics: "dev.crawler.blocks"
      props: |
        max.poll.records: 10
        fetch.min.bytes: 123456
    prefix: "rosetta-consumer-test-"
logging:
  level:
    com.cardano: DEBUG

blocks:
  batch-size: ${BLOCKS_BATCH_SIZE:1000}

